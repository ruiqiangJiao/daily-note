{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"\u9996\u9875"},{"location":"about/","text":"","title":"\u5173\u4e8e"},{"location":"algorithm/iforest/","text":"\u5b64\u7acb\u68ee\u6797 \uf0c1 \u5b64\u7acb\u68ee\u6797 \u5b64\u7acb\u68ee\u6797\u62d3\u5c55 \u4ee3\u7801","title":"\u5b64\u7acb\u68ee\u6797"},{"location":"algorithm/iforest/#_1","text":"\u5b64\u7acb\u68ee\u6797 \u5b64\u7acb\u68ee\u6797\u62d3\u5c55 \u4ee3\u7801","title":"\u5b64\u7acb\u68ee\u6797"},{"location":"algorithm/linear-regression/","text":"","title":"\u7ebf\u6027\u56de\u5f52"},{"location":"algorithm/s-h-esd/","text":"S-H-ESD \uf0c1 Automatic Anomaly Detection in the Cloud Via Statistical Learning An Enhanced Seasonal-Hybrid ESD Technique for Robust Anomaly Detection on Time Series CODE","title":"S-H-ESD"},{"location":"algorithm/s-h-esd/#s-h-esd","text":"Automatic Anomaly Detection in the Cloud Via Statistical Learning An Enhanced Seasonal-Hybrid ESD Technique for Robust Anomaly Detection on Time Series CODE","title":"S-H-ESD"},{"location":"program/R/","text":"R \uf0c1 shiny \u90e8\u7f72 \uf0c1 \u8bbf\u95ee shiny \u5b98\u7f51 \uff0c\u6ce8\u518c\u5e76\u767b\u5f55; email : ruiqiang@my.swjtu.edu.cn username : jiaoruiqiang \u52a0\u8f7d rsconnect \u5305\uff0c\u5e76\u5e94\u7528\u5176\u4e2d\u7684\u51fd\u6570 deployApp \u8fdb\u884c\u53d1\u5e03.","title":"R"},{"location":"program/R/#r","text":"","title":"R"},{"location":"program/R/#shiny","text":"\u8bbf\u95ee shiny \u5b98\u7f51 \uff0c\u6ce8\u518c\u5e76\u767b\u5f55; email : ruiqiang@my.swjtu.edu.cn username : jiaoruiqiang \u52a0\u8f7d rsconnect \u5305\uff0c\u5e76\u5e94\u7528\u5176\u4e2d\u7684\u51fd\u6570 deployApp \u8fdb\u884c\u53d1\u5e03.","title":"shiny \u90e8\u7f72"},{"location":"program/git/","text":"\u7248\u672c\u63a7\u5236 \uf0c1 github \uf0c1 \u521b\u5efa\u5e93 \u64a4\u9500\u6587\u4ef6 git reset git reset --hard head~1 git reset (--mixed) head~1 git reset --soft head~1 - git checkout git checkout \u548c git reset \u7684\u533a\u522b\u3002 \u6062\u590d\u6587\u4ef6 git reset --hard(mixed\u3001soft) id \u5220\u9664\u6587\u4ef6 git rm file \u6bd4\u8f83\u6587\u4ef6 git diff file \u5de5\u4f5c\u533a\u548c\u7f13\u5b58\u533a\u8fdb\u884c\u6bd4\u8f83 git diff HEAD file \u5de5\u4f5c\u533a\u548c\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u7684\u8fdb\u884c\u6bd4\u8f83 git diff --stage(cached) file \u7f13\u5b58\u533a\u548c\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u7684\u8fdb\u884c\u6bd4\u8f83 git diff branchName filepath \u5f53\u524d\u5206\u652f\u7684\u6587\u4ef6\u4e0ebranchName \u5206\u652f\u7684\u6587\u4ef6\u8fdb\u884c\u6bd4\u8f83 \u6dfb\u52a0\u8fdc\u7a0b\u6216\u8005\u63a8\u9001\u8fdc\u7a0b git fetch git merge git pull \u6dfb\u52a0\u5206\u652f master\uff1a \u4e3b\u5206\u652f\uff0c\u7528\u4e8e\u7248\u672c\u53d1\u5e03\uff1b develop\uff1a \u65e5\u5e38\u5f00\u53d1\u5206\u652f\uff0c\u4fdd\u5b58\u6700\u65b0\u5f00\u53d1\u4ee3\u7801\uff1b feature\uff1a \u529f\u80fd\u5f00\u53d1\uff0c\u53ea\u4e0edevelop\u5206\u652f\u8fdb\u884c\u4ea4\u4e92\uff1b release\uff1a master\u5206\u652f\u7684\u4e3a\u6d4b\u8bd5\u7248\u672c\uff1b hotfix\uff1a \u7ebf\u4e0a\u4fee\u590dbug\u5206\u652f\u3002 git branch git checkout git branch -b \u5408\u5e76 \u5206\u652f\u91cd\u6f14 git rebase \u8d2e\u5b58\u7ba1\u7406 \u6807\u7b7e\u7ba1\u7406 gitlab \uf0c1 bitbucket \uf0c1 \u5de5\u5177 \uf0c1 SourceTree \uf0c1 \u8df3\u8fc7\u6ce8\u518c\u7801 \u5728\u6211\u7684\u7535\u8111\u5730\u5740\u680f\u8f93\u5165 %LocalAppData%\\Atlassian\\SourceTree\\ \u4e8e\u662f\u6253\u5f00 SourceTree \u7684\u6587\u4ef6\u5939,\u65b0\u5efa accounts.json \u8be5\u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b: [ { \"$id\": \"1\", \"$type\": \"SourceTree.Api.Host.Identity.Model.IdentityAccount, SourceTree.Api.Host.Identity\", \"Authenticate\": true, \"HostInstance\": { \"$id\": \"2\", \"$type\": \"SourceTree.Host.Atlassianaccount.AtlassianAccountInstance, SourceTree.Host.AtlassianAccount\", \"Host\": { \"$id\": \"3\", \"$type\": \"SourceTree.Host.Atlassianaccount.AtlassianAccountHost, SourceTree.Host.AtlassianAccount\", \"Id\": \"atlassian account\" }, \"BaseUrl\": \"https://id.atlassian.com/\" }, \"Credentials\": { \"$id\": \"4\", \"$type\": \"SourceTree.Model.BasicAuthCredentials, SourceTree.Api.Account\", \"Username\": \"\", \"Email\": null }, \"IsDefault\": false } ]","title":"git"},{"location":"program/git/#_1","text":"","title":"\u7248\u672c\u63a7\u5236"},{"location":"program/git/#github","text":"\u521b\u5efa\u5e93 \u64a4\u9500\u6587\u4ef6 git reset git reset --hard head~1 git reset (--mixed) head~1 git reset --soft head~1 - git checkout git checkout \u548c git reset \u7684\u533a\u522b\u3002 \u6062\u590d\u6587\u4ef6 git reset --hard(mixed\u3001soft) id \u5220\u9664\u6587\u4ef6 git rm file \u6bd4\u8f83\u6587\u4ef6 git diff file \u5de5\u4f5c\u533a\u548c\u7f13\u5b58\u533a\u8fdb\u884c\u6bd4\u8f83 git diff HEAD file \u5de5\u4f5c\u533a\u548c\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u7684\u8fdb\u884c\u6bd4\u8f83 git diff --stage(cached) file \u7f13\u5b58\u533a\u548c\u6700\u8fd1\u4e00\u6b21\u63d0\u4ea4\u7684\u8fdb\u884c\u6bd4\u8f83 git diff branchName filepath \u5f53\u524d\u5206\u652f\u7684\u6587\u4ef6\u4e0ebranchName \u5206\u652f\u7684\u6587\u4ef6\u8fdb\u884c\u6bd4\u8f83 \u6dfb\u52a0\u8fdc\u7a0b\u6216\u8005\u63a8\u9001\u8fdc\u7a0b git fetch git merge git pull \u6dfb\u52a0\u5206\u652f master\uff1a \u4e3b\u5206\u652f\uff0c\u7528\u4e8e\u7248\u672c\u53d1\u5e03\uff1b develop\uff1a \u65e5\u5e38\u5f00\u53d1\u5206\u652f\uff0c\u4fdd\u5b58\u6700\u65b0\u5f00\u53d1\u4ee3\u7801\uff1b feature\uff1a \u529f\u80fd\u5f00\u53d1\uff0c\u53ea\u4e0edevelop\u5206\u652f\u8fdb\u884c\u4ea4\u4e92\uff1b release\uff1a master\u5206\u652f\u7684\u4e3a\u6d4b\u8bd5\u7248\u672c\uff1b hotfix\uff1a \u7ebf\u4e0a\u4fee\u590dbug\u5206\u652f\u3002 git branch git checkout git branch -b \u5408\u5e76 \u5206\u652f\u91cd\u6f14 git rebase \u8d2e\u5b58\u7ba1\u7406 \u6807\u7b7e\u7ba1\u7406","title":"github"},{"location":"program/git/#gitlab","text":"","title":"gitlab"},{"location":"program/git/#bitbucket","text":"","title":"bitbucket"},{"location":"program/git/#_2","text":"","title":"\u5de5\u5177"},{"location":"program/git/#sourcetree","text":"\u8df3\u8fc7\u6ce8\u518c\u7801 \u5728\u6211\u7684\u7535\u8111\u5730\u5740\u680f\u8f93\u5165 %LocalAppData%\\Atlassian\\SourceTree\\ \u4e8e\u662f\u6253\u5f00 SourceTree \u7684\u6587\u4ef6\u5939,\u65b0\u5efa accounts.json \u8be5\u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b: [ { \"$id\": \"1\", \"$type\": \"SourceTree.Api.Host.Identity.Model.IdentityAccount, SourceTree.Api.Host.Identity\", \"Authenticate\": true, \"HostInstance\": { \"$id\": \"2\", \"$type\": \"SourceTree.Host.Atlassianaccount.AtlassianAccountInstance, SourceTree.Host.AtlassianAccount\", \"Host\": { \"$id\": \"3\", \"$type\": \"SourceTree.Host.Atlassianaccount.AtlassianAccountHost, SourceTree.Host.AtlassianAccount\", \"Id\": \"atlassian account\" }, \"BaseUrl\": \"https://id.atlassian.com/\" }, \"Credentials\": { \"$id\": \"4\", \"$type\": \"SourceTree.Model.BasicAuthCredentials, SourceTree.Api.Account\", \"Username\": \"\", \"Email\": null }, \"IsDefault\": false } ]","title":"SourceTree"},{"location":"program/linux/","text":"\u5e38\u7528 Linux \u547d\u4ee4 \uf0c1 Vim \uf0c1 \u5220\u9664 dd:\u5220\u9664\u6e38\u6807\u6240\u5728\u7684\u4e00\u6574\u884c(\u5e38\u7528)\uff1b ndd:n\u4e3a\u6570\u5b57\u3002\u5220\u9664\u5149\u6807\u6240\u5728\u7684\u5411\u4e0bn\u884c\uff0c\u4f8b\u598220dd\u5219\u662f\u5220\u9664\u5149\u6807\u6240\u5728\u7684\u5411\u4e0b20\u884c\uff1b d1G:\u5220\u9664\u5149\u6807\u6240\u5728\u5230\u7b2c\u4e00\u884c\u7684\u6240\u6709\u6570\u636e\uff1b dG:\u5220\u9664\u5149\u6807\u6240\u5728\u5230\u6700\u540e\u4e00\u884c\u7684\u6240\u6709\u6570\u636e\uff1b d$:\u5220\u9664\u5149\u6807\u6240\u5728\u5904\uff0c\u5230\u8be5\u884c\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff1b d0:\u90a3\u4e2a\u662f\u6570\u5b570,\u5220\u9664\u5149\u6807\u6240\u5728\u5230\u8be5\u884c\u7684\u6700\u524d\u9762\u7684\u4e00\u4e2a\u5b57\u7b26\uff1b x,X:x\u5411\u540e\u5220\u9664\u4e00\u4e2a\u5b57\u7b26(\u76f8\u5f53\u4e8e[del]\u6309\u952e),X\u5411\u524d\u5220\u9664\u4e00\u4e2a\u5b57\u7b26(\u76f8\u5f53\u4e8e[backspace]\u5373\u9000\u683c\u952e)\uff1b nx:n\u4e3a\u6570\u5b57\uff0c\u8fde\u7eed\u5411\u540e\u5220\u9664n\u4e2a\u5b57\u7b26\uff1b dw: \u5220\u9664\u81ea\u5f53\u524d\u5149\u6807\u81f3\u4e0b\u4e00\u4e2aword\u7684\u5f00\u5934\uff1b db: \u5220\u9664\u81ea\u5f53\u524d\u5149\u6807\u81f3\u524d\u4e00\u4e2aword\u7684\u5f00\u59cb\uff1b diw: \u5220\u9664\u5f53\u524d\u5149\u6807\u6240\u5728\u7684word(\u4e0d\u5305\u62ec\u7a7a\u767d\u5b57\u7b26)\uff1b daw: \u5220\u9664\u5f53\u524d\u5149\u6807\u6240\u5728\u7684word(\u5305\u62ec\u7a7a\u767d\u5b57\u7b26) \u590d\u5236 yy: \u590d\u5236\u6e38\u6807\u6240\u5728\u7684\u90a3\u4e00\u884c(\u5e38\u7528)\uff1b nyy: n\u4e3a\u6570\u5b57\u3002\u590d\u5236\u5149\u6807\u6240\u5728\u7684\u5411\u4e0b n \u884c\uff1b y1G: \u590d\u5236\u6e38\u6807\u6240\u5728\u884c\u5230\u7b2c\u4e00\u884c\u7684\u6240\u6709\u6570\u636e\uff1b yG: \u590d\u5236\u6e38\u6807\u6240\u5728\u884c\u5230\u6700\u540e\u4e00\u884c\u7684\u6240\u6709\u6570\u636e\uff1b y0: \u590d\u5236\u5149\u6807\u6240\u5728\u7684\u90a3\u4e2a\u5b57\u7b26\u5230\u8be5\u884c\u884c\u9996\u7684\u6240\u6709\u6570\u636e\uff1b y$: \u590d\u5236\u5149\u6807\u6240\u5728\u7684\u90a3\u4e2a\u5b57\u7b26\u5230\u8be5\u884c\u884c\u5c3e\u7684\u6240\u6709\u6570\u636e\uff1b \u7c98\u8d34 p: \u5c06\u5df2\u590d\u5236\u7684\u6570\u636e\u5728\u5149\u6807\u4e0b\u4e00\u884c\u8d34\u4e0a; P: \u5df2\u590d\u5236\u7684\u6570\u636e\u5728\u5149\u6807\u8d34\u5728\u6e38\u6807\u4e0a\u4e00\u884c\uff1b \u641c\u7d22 /word \u5411\u5149\u6807\u4e4b\u4e0b\u5bfb\u627e\u4e00\u4e2a\u540d\u79f0\u4e3a word \u7684\u5b57\u7b26\u4e32\uff1b ?word \u5411\u5149\u6807\u4e4b\u4e0a\u5bfb\u627e\u4e00\u4e2a\u5b57\u7b26\u4e32\u540d\u79f0\u4e3a word \u7684\u5b57\u7b26\u4e32\uff1b n \u8fd9\u4e2a n \u662f\u82f1\u6587\u6309\u952e\u3002\u4ee3\u8868\u91cd\u590d\u524d\u4e00\u4e2a\u641c\u5bfb\u7684\u52a8\u4f5c\uff1b N \u8fd9\u4e2a N \u662f\u82f1\u6587\u6309\u952e\u3002\u4e0e n \u521a\u597d\u76f8\u53cd\uff0c\u4e3a\u300e\u53cd\u5411\u300f\u8fdb\u884c\u524d\u4e00\u4e2a\u641c\u5bfb\u52a8\u4f5c\uff1b \u5149\u6807 w \u5149\u6807\u79fb\u52a8\u81f3\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934 W \u5149\u6807\u79fb\u52a8\u81f3\u4e0b\u4e00\u4e2a\u957f\u5355\u8bcd\u7684\u5f00\u5934 b \u5149\u6807\u79fb\u52a8\u81f3\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934 B \u5149\u6807\u79fb\u52a8\u81f3\u4e0a\u4e00\u4e2a\u957f\u5355\u8bcd\u7684\u5f00\u5934 e \u5149\u6807\u79fb\u52a8\u81f3\u4e0b\u4e2a\u5b57\u7684\u5b57\u5c3e E \u5149\u6807\u79fb\u52a8\u81f3\u4e0b\u4e2a\u957f\u5b57\u7684\u5b57\u5c3e ge \u524d\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26 \u7f16\u8f91\u6a21\u5f0f i \u5f53\u524d\u5149\u6807\u524d\u63d2\u5165 I \u5149\u6807\u6240\u5728\u884c\u9996\u63d2\u5165 o \u5f53\u524d\u884c\u4e0b\u63d2\u5165\u7a7a\u884c O \u5f53\u524d\u884c\u4e0a\u63d2\u5165\u7a7a\u884c a \u5f53\u524d\u5149\u6807\u540e\u63d2\u5165 A \u5149\u6807\u6240\u5728\u884c\u672b\u63d2\u5165 ddp/P \u5149\u6807\u6240\u5728\u7684\u4e0a\u4e0b\u884c\u4e92\u6362\u4f4d\u7f6e \u6539\u53d8\u6587\u672c cc/S: \u6539\u53d8\u6574\u884c,\u4f46\u662f\u4fdd\u6301\u539f\u6765\u7684\u7f29\u8fdb\uff1b c$/C: \u6539\u53d8\u5f53\u524d\u5149\u6807\u5230\u884c\u5c3e\u7684\u5185\u5bb9\uff1b ciw : \u6539\u53d8\u5f53\u524d\u5149\u6807\u6240\u5728\u7684word(\u4e0d\u5305\u62ec\u7a7a\u767d\u5b57\u7b26)\uff1b caw : \u5220\u9664\u5f53\u524d\u5149\u6807\u6240\u5728\u7684word(\u5305\u62ec\u7a7a\u767d\u5b57\u7b26) \u6298\u53e0 z + c : \u6298\u53e0 z + o : \u62c6\u5f00 z + M : \u6298\u53e0\u6240\u6709\u4ee3\u7801\u5757 z + R : \u62c6\u5f00\u6240\u6709\u4ee3\u7801\u5757 \u5b9a\u65f6\u540e\u53f0\u547d\u4ee4\u8bbe\u7f6e \uf0c1 0 23 * * 1 nohup /path/run.sh temp.py > /path/temp.log 2 > &1","title":"linux"},{"location":"program/linux/#linux","text":"","title":"\u5e38\u7528 Linux \u547d\u4ee4"},{"location":"program/linux/#vim","text":"\u5220\u9664 dd:\u5220\u9664\u6e38\u6807\u6240\u5728\u7684\u4e00\u6574\u884c(\u5e38\u7528)\uff1b ndd:n\u4e3a\u6570\u5b57\u3002\u5220\u9664\u5149\u6807\u6240\u5728\u7684\u5411\u4e0bn\u884c\uff0c\u4f8b\u598220dd\u5219\u662f\u5220\u9664\u5149\u6807\u6240\u5728\u7684\u5411\u4e0b20\u884c\uff1b d1G:\u5220\u9664\u5149\u6807\u6240\u5728\u5230\u7b2c\u4e00\u884c\u7684\u6240\u6709\u6570\u636e\uff1b dG:\u5220\u9664\u5149\u6807\u6240\u5728\u5230\u6700\u540e\u4e00\u884c\u7684\u6240\u6709\u6570\u636e\uff1b d$:\u5220\u9664\u5149\u6807\u6240\u5728\u5904\uff0c\u5230\u8be5\u884c\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\uff1b d0:\u90a3\u4e2a\u662f\u6570\u5b570,\u5220\u9664\u5149\u6807\u6240\u5728\u5230\u8be5\u884c\u7684\u6700\u524d\u9762\u7684\u4e00\u4e2a\u5b57\u7b26\uff1b x,X:x\u5411\u540e\u5220\u9664\u4e00\u4e2a\u5b57\u7b26(\u76f8\u5f53\u4e8e[del]\u6309\u952e),X\u5411\u524d\u5220\u9664\u4e00\u4e2a\u5b57\u7b26(\u76f8\u5f53\u4e8e[backspace]\u5373\u9000\u683c\u952e)\uff1b nx:n\u4e3a\u6570\u5b57\uff0c\u8fde\u7eed\u5411\u540e\u5220\u9664n\u4e2a\u5b57\u7b26\uff1b dw: \u5220\u9664\u81ea\u5f53\u524d\u5149\u6807\u81f3\u4e0b\u4e00\u4e2aword\u7684\u5f00\u5934\uff1b db: \u5220\u9664\u81ea\u5f53\u524d\u5149\u6807\u81f3\u524d\u4e00\u4e2aword\u7684\u5f00\u59cb\uff1b diw: \u5220\u9664\u5f53\u524d\u5149\u6807\u6240\u5728\u7684word(\u4e0d\u5305\u62ec\u7a7a\u767d\u5b57\u7b26)\uff1b daw: \u5220\u9664\u5f53\u524d\u5149\u6807\u6240\u5728\u7684word(\u5305\u62ec\u7a7a\u767d\u5b57\u7b26) \u590d\u5236 yy: \u590d\u5236\u6e38\u6807\u6240\u5728\u7684\u90a3\u4e00\u884c(\u5e38\u7528)\uff1b nyy: n\u4e3a\u6570\u5b57\u3002\u590d\u5236\u5149\u6807\u6240\u5728\u7684\u5411\u4e0b n \u884c\uff1b y1G: \u590d\u5236\u6e38\u6807\u6240\u5728\u884c\u5230\u7b2c\u4e00\u884c\u7684\u6240\u6709\u6570\u636e\uff1b yG: \u590d\u5236\u6e38\u6807\u6240\u5728\u884c\u5230\u6700\u540e\u4e00\u884c\u7684\u6240\u6709\u6570\u636e\uff1b y0: \u590d\u5236\u5149\u6807\u6240\u5728\u7684\u90a3\u4e2a\u5b57\u7b26\u5230\u8be5\u884c\u884c\u9996\u7684\u6240\u6709\u6570\u636e\uff1b y$: \u590d\u5236\u5149\u6807\u6240\u5728\u7684\u90a3\u4e2a\u5b57\u7b26\u5230\u8be5\u884c\u884c\u5c3e\u7684\u6240\u6709\u6570\u636e\uff1b \u7c98\u8d34 p: \u5c06\u5df2\u590d\u5236\u7684\u6570\u636e\u5728\u5149\u6807\u4e0b\u4e00\u884c\u8d34\u4e0a; P: \u5df2\u590d\u5236\u7684\u6570\u636e\u5728\u5149\u6807\u8d34\u5728\u6e38\u6807\u4e0a\u4e00\u884c\uff1b \u641c\u7d22 /word \u5411\u5149\u6807\u4e4b\u4e0b\u5bfb\u627e\u4e00\u4e2a\u540d\u79f0\u4e3a word \u7684\u5b57\u7b26\u4e32\uff1b ?word \u5411\u5149\u6807\u4e4b\u4e0a\u5bfb\u627e\u4e00\u4e2a\u5b57\u7b26\u4e32\u540d\u79f0\u4e3a word \u7684\u5b57\u7b26\u4e32\uff1b n \u8fd9\u4e2a n \u662f\u82f1\u6587\u6309\u952e\u3002\u4ee3\u8868\u91cd\u590d\u524d\u4e00\u4e2a\u641c\u5bfb\u7684\u52a8\u4f5c\uff1b N \u8fd9\u4e2a N \u662f\u82f1\u6587\u6309\u952e\u3002\u4e0e n \u521a\u597d\u76f8\u53cd\uff0c\u4e3a\u300e\u53cd\u5411\u300f\u8fdb\u884c\u524d\u4e00\u4e2a\u641c\u5bfb\u52a8\u4f5c\uff1b \u5149\u6807 w \u5149\u6807\u79fb\u52a8\u81f3\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934 W \u5149\u6807\u79fb\u52a8\u81f3\u4e0b\u4e00\u4e2a\u957f\u5355\u8bcd\u7684\u5f00\u5934 b \u5149\u6807\u79fb\u52a8\u81f3\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934 B \u5149\u6807\u79fb\u52a8\u81f3\u4e0a\u4e00\u4e2a\u957f\u5355\u8bcd\u7684\u5f00\u5934 e \u5149\u6807\u79fb\u52a8\u81f3\u4e0b\u4e2a\u5b57\u7684\u5b57\u5c3e E \u5149\u6807\u79fb\u52a8\u81f3\u4e0b\u4e2a\u957f\u5b57\u7684\u5b57\u5c3e ge \u524d\u4e00\u4e2a\u5355\u8bcd\u7684\u6700\u540e\u4e00\u4e2a\u5b57\u7b26 \u7f16\u8f91\u6a21\u5f0f i \u5f53\u524d\u5149\u6807\u524d\u63d2\u5165 I \u5149\u6807\u6240\u5728\u884c\u9996\u63d2\u5165 o \u5f53\u524d\u884c\u4e0b\u63d2\u5165\u7a7a\u884c O \u5f53\u524d\u884c\u4e0a\u63d2\u5165\u7a7a\u884c a \u5f53\u524d\u5149\u6807\u540e\u63d2\u5165 A \u5149\u6807\u6240\u5728\u884c\u672b\u63d2\u5165 ddp/P \u5149\u6807\u6240\u5728\u7684\u4e0a\u4e0b\u884c\u4e92\u6362\u4f4d\u7f6e \u6539\u53d8\u6587\u672c cc/S: \u6539\u53d8\u6574\u884c,\u4f46\u662f\u4fdd\u6301\u539f\u6765\u7684\u7f29\u8fdb\uff1b c$/C: \u6539\u53d8\u5f53\u524d\u5149\u6807\u5230\u884c\u5c3e\u7684\u5185\u5bb9\uff1b ciw : \u6539\u53d8\u5f53\u524d\u5149\u6807\u6240\u5728\u7684word(\u4e0d\u5305\u62ec\u7a7a\u767d\u5b57\u7b26)\uff1b caw : \u5220\u9664\u5f53\u524d\u5149\u6807\u6240\u5728\u7684word(\u5305\u62ec\u7a7a\u767d\u5b57\u7b26) \u6298\u53e0 z + c : \u6298\u53e0 z + o : \u62c6\u5f00 z + M : \u6298\u53e0\u6240\u6709\u4ee3\u7801\u5757 z + R : \u62c6\u5f00\u6240\u6709\u4ee3\u7801\u5757","title":"Vim"},{"location":"program/linux/#_1","text":"0 23 * * 1 nohup /path/run.sh temp.py > /path/temp.log 2 > &1","title":"\u5b9a\u65f6\u540e\u53f0\u547d\u4ee4\u8bbe\u7f6e"},{"location":"program/python/","text":"python \uf0c1 \u65f6\u95f4\u5904\u7406 \uf0c1 1 dateutil import datetime from dateutil import rrule today = datetime.date.today() oneday = datetime.date(2017,10 ,17) years = rrule.rrule(rrule.YEARLY, dtstart=oneday, until=today).count() months = rrule.rrule(rrule.MONTHLY, dtstart=oneday, until=today).count() days = rrule.rrule(rrule.DAILY, dtstart=oneday, until=today).count() print years print months print days 2 pandas import pandas as pd import datetime , time now = datetime.datetime.now() ago = now - pd.tseries.offsets.DateOffset(months = 4) print ago 3 time \u8ba1\u7b97\u673a\u4f7f\u7528\u65f6\u95f4\u6233\u548c struct_time \u6570\u7ec4\u4e24\u79cd\u65b9\u5f0f\u8868\u793a\u65f6\u95f4 import time print(time.localtime(time.time())) \u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u53ef\u4ee5\u4f7f\u7528\u7684\u65e5\u671f\u548c\u65f6\u95f4\u7b26\u53f7\u5982\u4e0b: %y \u4e24\u4f4d\u6570\u7684\u5e74\u4efd\u8868\u793a\uff0800-99\uff09; %Y \u56db\u4f4d\u6570\u7684\u5e74\u4efd\u8868\u793a \uff08000 - 9999\uff09; %m \u6708\u4efd\uff0801-12\uff09; %d \u6708\u5185\u4e2d\u4e00\u5929\uff080-31\uff09; %H 24\u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff080-23\uff09; %I 12\u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff0801-12\uff09; %M \u5206\u949f\u6570\uff0800~59\uff09; %j \u5e74\u5185\u7684\u4e00\u5929; %U \u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800~53\uff09\uff0c\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb; %w \u661f\u671f\uff080~6\uff09\uff0c\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb; %W \u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800~53\uff09\uff0c\u661f\u671f\u4e00\u4f4d\u661f\u671f\u7684\u5f00\u59cb. \u9762\u5411\u5bf9\u8c61 \uf0c1 \u9762\u5411\u5bf9\u8c61\u57fa\u672c\u6982\u5ff5 \uf0c1 (1) \u7ee7\u627f (2) \u591a\u6001 (3) \u5c01\u88c5 (4) \u6784\u9020\u51fd\u6570 \u5f53\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\u5b9e\u4f8b\u65f6\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u901a\u8fc7\u6784\u9020\u51fd\u6570\u5bf9\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\u3002 (5) \u6790\u6784\u51fd\u6570 \u91ca\u653e\u7c7b\u5360\u7528\u7684\u8d44\u6e90\u3002 (6) \u9759\u6001\u6210\u5458 \u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u4e0e\u7c7b\u5177\u4f53\u7684\u5bf9\u8c61\u6ca1\u6709\u5173\u7cfb\uff0c\u800c\u53ea\u5c5e\u4e8e\u4ed6\u4eec\u5b9a\u4e49\u7684\u7c7b\u3002\u5728\u9759\u6001\u65b9\u6cd5\u65e0\u6cd5\u8bbf\u95ee\u5b9e\u4f8b\u53d8\u91cf\uff0c\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u53d8\u91cf\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u5f15\u7528\u9759\u6001\u53d8\u91cf\u3002 class UserInfo: def __init__(self , name , pwd): self.username = name self._pwd = pwd def output(self): print(\"username\" , self.username) def __del__(self): print(\"byebye~\") u = UserInfo(\"admin\" , \"123456\") u.output() del u \u6b63\u5219\u8868\u8fbe\u5f0f \uf0c1 []: \u5339\u914d\u65b9\u62ec\u53f7\u4e2d\u4efb\u610f\u4e00\u4e2a\u5185\u5bb9 ^ : \u5339\u914d\u4ee5\u67d0\u4e2a\u5185\u5bb9\u5f00\u5934\u7684\u6a21\u5f0f $ : \u5339\u914d\u4ee5\u67d0\u4e2a\u5185\u5bb9\u5f00\u5934\u7684\u6a21\u5f0f import re pattern = r'[0-9]' print re.findall(pattern , '\u60a8\u597d, jony is culcating 1+1') pattern = r'^h' print re.findall(pattern , 'hello world') \u5206\u7ec4\u6392\u5e8f \uf0c1 df = pd.DataFrame({'Sp':['a','b','c','d','e','f'], 'Mt':['s1', 's1', 's2','s2','s2','s3'], 'Value':[1,2,3,4,5,6], 'Count':[3,2,5,10,10,6]}) df Sp Mt Value Count 0 a s1 1 3 1 b s1 2 2 2 c s2 3 5 3 d s2 4 10 4 e s2 5 10 5 f s3 6 6 df.sort_values('Count', ascending=False).groupby('Mt', as_index=False).first() Mt Sp Value Count 0 s1 a 1 3 1 s2 d 4 10 2 s3 f 6 6 \u540c\u4e00\u4e2a\u7ec4\u8fdb\u884c\u5408\u5e76 \uf0c1 series = df.groupby(by='Mt',as_index=True).apply(lambda p:[','.join(p['Sp'])]) df_result = pd.DataFrame({'Mt':series.index, 'Sp': series.values}) df_result Mt Sp 0 s1 [a, b] 1 s2 [c, d, e] 2 s3 [f]","title":"python"},{"location":"program/python/#python","text":"","title":"python"},{"location":"program/python/#_1","text":"1 dateutil import datetime from dateutil import rrule today = datetime.date.today() oneday = datetime.date(2017,10 ,17) years = rrule.rrule(rrule.YEARLY, dtstart=oneday, until=today).count() months = rrule.rrule(rrule.MONTHLY, dtstart=oneday, until=today).count() days = rrule.rrule(rrule.DAILY, dtstart=oneday, until=today).count() print years print months print days 2 pandas import pandas as pd import datetime , time now = datetime.datetime.now() ago = now - pd.tseries.offsets.DateOffset(months = 4) print ago 3 time \u8ba1\u7b97\u673a\u4f7f\u7528\u65f6\u95f4\u6233\u548c struct_time \u6570\u7ec4\u4e24\u79cd\u65b9\u5f0f\u8868\u793a\u65f6\u95f4 import time print(time.localtime(time.time())) \u683c\u5f0f\u5b57\u7b26\u4e32\u4e2d\u53ef\u4ee5\u4f7f\u7528\u7684\u65e5\u671f\u548c\u65f6\u95f4\u7b26\u53f7\u5982\u4e0b: %y \u4e24\u4f4d\u6570\u7684\u5e74\u4efd\u8868\u793a\uff0800-99\uff09; %Y \u56db\u4f4d\u6570\u7684\u5e74\u4efd\u8868\u793a \uff08000 - 9999\uff09; %m \u6708\u4efd\uff0801-12\uff09; %d \u6708\u5185\u4e2d\u4e00\u5929\uff080-31\uff09; %H 24\u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff080-23\uff09; %I 12\u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff0801-12\uff09; %M \u5206\u949f\u6570\uff0800~59\uff09; %j \u5e74\u5185\u7684\u4e00\u5929; %U \u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800~53\uff09\uff0c\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb; %w \u661f\u671f\uff080~6\uff09\uff0c\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb; %W \u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800~53\uff09\uff0c\u661f\u671f\u4e00\u4f4d\u661f\u671f\u7684\u5f00\u59cb.","title":"\u65f6\u95f4\u5904\u7406"},{"location":"program/python/#_2","text":"","title":"\u9762\u5411\u5bf9\u8c61"},{"location":"program/python/#_3","text":"(1) \u7ee7\u627f (2) \u591a\u6001 (3) \u5c01\u88c5 (4) \u6784\u9020\u51fd\u6570 \u5f53\u521b\u5efa\u7c7b\u7684\u5bf9\u8c61\u5b9e\u4f8b\u65f6\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u901a\u8fc7\u6784\u9020\u51fd\u6570\u5bf9\u7c7b\u8fdb\u884c\u521d\u59cb\u5316\u64cd\u4f5c\u3002 (5) \u6790\u6784\u51fd\u6570 \u91ca\u653e\u7c7b\u5360\u7528\u7684\u8d44\u6e90\u3002 (6) \u9759\u6001\u6210\u5458 \u9759\u6001\u53d8\u91cf\u548c\u9759\u6001\u65b9\u6cd5\u4e0e\u7c7b\u5177\u4f53\u7684\u5bf9\u8c61\u6ca1\u6709\u5173\u7cfb\uff0c\u800c\u53ea\u5c5e\u4e8e\u4ed6\u4eec\u5b9a\u4e49\u7684\u7c7b\u3002\u5728\u9759\u6001\u65b9\u6cd5\u65e0\u6cd5\u8bbf\u95ee\u5b9e\u4f8b\u53d8\u91cf\uff0c\u4e0d\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u7c7b\u7684\u9759\u6001\u53d8\u91cf\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u7c7b\u540d\u5f15\u7528\u9759\u6001\u53d8\u91cf\u3002 class UserInfo: def __init__(self , name , pwd): self.username = name self._pwd = pwd def output(self): print(\"username\" , self.username) def __del__(self): print(\"byebye~\") u = UserInfo(\"admin\" , \"123456\") u.output() del u","title":"\u9762\u5411\u5bf9\u8c61\u57fa\u672c\u6982\u5ff5"},{"location":"program/python/#_4","text":"[]: \u5339\u914d\u65b9\u62ec\u53f7\u4e2d\u4efb\u610f\u4e00\u4e2a\u5185\u5bb9 ^ : \u5339\u914d\u4ee5\u67d0\u4e2a\u5185\u5bb9\u5f00\u5934\u7684\u6a21\u5f0f $ : \u5339\u914d\u4ee5\u67d0\u4e2a\u5185\u5bb9\u5f00\u5934\u7684\u6a21\u5f0f import re pattern = r'[0-9]' print re.findall(pattern , '\u60a8\u597d, jony is culcating 1+1') pattern = r'^h' print re.findall(pattern , 'hello world')","title":"\u6b63\u5219\u8868\u8fbe\u5f0f"},{"location":"program/python/#_5","text":"df = pd.DataFrame({'Sp':['a','b','c','d','e','f'], 'Mt':['s1', 's1', 's2','s2','s2','s3'], 'Value':[1,2,3,4,5,6], 'Count':[3,2,5,10,10,6]}) df Sp Mt Value Count 0 a s1 1 3 1 b s1 2 2 2 c s2 3 5 3 d s2 4 10 4 e s2 5 10 5 f s3 6 6 df.sort_values('Count', ascending=False).groupby('Mt', as_index=False).first() Mt Sp Value Count 0 s1 a 1 3 1 s2 d 4 10 2 s3 f 6 6","title":"\u5206\u7ec4\u6392\u5e8f"},{"location":"program/python/#_6","text":"series = df.groupby(by='Mt',as_index=True).apply(lambda p:[','.join(p['Sp'])]) df_result = pd.DataFrame({'Mt':series.index, 'Sp': series.values}) df_result Mt Sp 0 s1 [a, b] 1 s2 [c, d, e] 2 s3 [f]","title":"\u540c\u4e00\u4e2a\u7ec4\u8fdb\u884c\u5408\u5e76"},{"location":"program/software/","text":"\u5e38\u7528\u8f6f\u4ef6\u5b89\u88c5 \uf0c1 pycharm \u5b89\u88c5 \uf0c1 1.\u5b89\u88c5 python2.7.13\uff0c\u5b8c\u6210\u540e\u547d\u4ee4\u884c\u4f7f\u7528 python \u67e5\u770b 2.\u5b89\u88c5 Pycharm 3.\u4e0b\u8f7dSpark\u7684\u5b89\u88c5\u5305\uff0c\u89e3\u538b\u5230 E:\\spark\\spark-2.1.0-bin-hadoop2.7 4.\u8bbe\u7f6e SPARK \u7684\u73af\u5883\u53d8\u91cf SPARK_HOME \u548c Path 5.\u4e0b\u8f7d Hadoop\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u6587\u4ef6 winutils.ext,\u6587\u4ef6\u5939\u5728 E:\\hadoop-common-2.2.0-bin-master\uff0c\u5e76\u4e14\u5728\u73af\u5883\u53d8\u91cf\u4e2d\u8bbe\u7f6e HADOOP_HOME 6.\u5c06 spark \u8def\u5f84 E:\\spark\\spark-2.1.0-bin-hadoop2.7\\python \u4e2d pyspark \u6587\u4ef6\u5939\u5168\u90e8\u62f7\u8d1d\u5230 Python \u5b89\u88c5\u73af\u5883\u4e0b\u7684 site-packages \u4e2d\uff1aE:\\SoftWare Tools\\Python\\PythonEnvironment\\Lib\\site-packages 7.\u6253\u5f00 Pycharm\uff0c\u5199 spark \u7a0b\u5e8f\u65f6\uff0c\u9047\u5230 py4j \u7684\u9519\u8bef\uff0c\u89e3\u51b3\u529e\u6cd5\uff1a\u9700\u8981\u5c06 py4j \u7684\u5305\u5bfc\u5165\u5230 Python \u73af\u5883\u53d8\u91cf\u4e0b\u7684 site-packages \u4e0b\u3002 8.\u5728 pycharm \u4e2d\u7684 run->edit configurations->environment variables \u4e2d\u8bbe\u7f6e HADOOP_HOME \u7684\u503c\uff0c\u5982 \u8df3\u8fc7\u6ce8\u518c\u7801 \u5728\u6211\u7684\u7535\u8111\u5730\u5740\u680f\u8f93\u5165 %LocalAppData%\\Atlassian\\SourceTree\\ \u4e8e\u662f\u6253\u5f00 SourceTree \u7684\u6587\u4ef6\u5939,\u65b0\u5efa accounts.json \u8be5\u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b: [ { \"$id\": \"1\", \"$type\": \"SourceTree.Api.Host.Identity.Model.IdentityAccount, SourceTree.Api.Host.Identity\", \"Authenticate\": true, \"HostInstance\": { \"$id\": \"2\", \"$type\": \"SourceTree.Host.Atlassianaccount.AtlassianAccountInstance, SourceTree.Host.AtlassianAccount\", \"Host\": { \"$id\": \"3\", \"$type\": \"SourceTree.Host.Atlassianaccount.AtlassianAccountHost, SourceTree.Host.AtlassianAccount\", \"Id\": \"atlassian account\" }, \"BaseUrl\": \"https://id.atlassian.com/\" }, \"Credentials\": { \"$id\": \"4\", \"$type\": \"SourceTree.Model.BasicAuthCredentials, SourceTree.Api.Account\", \"Username\": \"\", \"Email\": null }, \"IsDefault\": false } ]","title":"software"},{"location":"program/software/#_1","text":"","title":"\u5e38\u7528\u8f6f\u4ef6\u5b89\u88c5"},{"location":"program/software/#pycharm","text":"1.\u5b89\u88c5 python2.7.13\uff0c\u5b8c\u6210\u540e\u547d\u4ee4\u884c\u4f7f\u7528 python \u67e5\u770b 2.\u5b89\u88c5 Pycharm 3.\u4e0b\u8f7dSpark\u7684\u5b89\u88c5\u5305\uff0c\u89e3\u538b\u5230 E:\\spark\\spark-2.1.0-bin-hadoop2.7 4.\u8bbe\u7f6e SPARK \u7684\u73af\u5883\u53d8\u91cf SPARK_HOME \u548c Path 5.\u4e0b\u8f7d Hadoop\uff0c\u5176\u4e2d\u5305\u542b\u4e00\u4e2a\u6587\u4ef6 winutils.ext,\u6587\u4ef6\u5939\u5728 E:\\hadoop-common-2.2.0-bin-master\uff0c\u5e76\u4e14\u5728\u73af\u5883\u53d8\u91cf\u4e2d\u8bbe\u7f6e HADOOP_HOME 6.\u5c06 spark \u8def\u5f84 E:\\spark\\spark-2.1.0-bin-hadoop2.7\\python \u4e2d pyspark \u6587\u4ef6\u5939\u5168\u90e8\u62f7\u8d1d\u5230 Python \u5b89\u88c5\u73af\u5883\u4e0b\u7684 site-packages \u4e2d\uff1aE:\\SoftWare Tools\\Python\\PythonEnvironment\\Lib\\site-packages 7.\u6253\u5f00 Pycharm\uff0c\u5199 spark \u7a0b\u5e8f\u65f6\uff0c\u9047\u5230 py4j \u7684\u9519\u8bef\uff0c\u89e3\u51b3\u529e\u6cd5\uff1a\u9700\u8981\u5c06 py4j \u7684\u5305\u5bfc\u5165\u5230 Python \u73af\u5883\u53d8\u91cf\u4e0b\u7684 site-packages \u4e0b\u3002 8.\u5728 pycharm \u4e2d\u7684 run->edit configurations->environment variables \u4e2d\u8bbe\u7f6e HADOOP_HOME \u7684\u503c\uff0c\u5982 \u8df3\u8fc7\u6ce8\u518c\u7801 \u5728\u6211\u7684\u7535\u8111\u5730\u5740\u680f\u8f93\u5165 %LocalAppData%\\Atlassian\\SourceTree\\ \u4e8e\u662f\u6253\u5f00 SourceTree \u7684\u6587\u4ef6\u5939,\u65b0\u5efa accounts.json \u8be5\u6587\u4ef6\u7684\u5185\u5bb9\u5982\u4e0b: [ { \"$id\": \"1\", \"$type\": \"SourceTree.Api.Host.Identity.Model.IdentityAccount, SourceTree.Api.Host.Identity\", \"Authenticate\": true, \"HostInstance\": { \"$id\": \"2\", \"$type\": \"SourceTree.Host.Atlassianaccount.AtlassianAccountInstance, SourceTree.Host.AtlassianAccount\", \"Host\": { \"$id\": \"3\", \"$type\": \"SourceTree.Host.Atlassianaccount.AtlassianAccountHost, SourceTree.Host.AtlassianAccount\", \"Id\": \"atlassian account\" }, \"BaseUrl\": \"https://id.atlassian.com/\" }, \"Credentials\": { \"$id\": \"4\", \"$type\": \"SourceTree.Model.BasicAuthCredentials, SourceTree.Api.Account\", \"Username\": \"\", \"Email\": null }, \"IsDefault\": false } ]","title":"pycharm \u5b89\u88c5"},{"location":"program/spark/","text":"Spark \uf0c1 Hive \uf0c1 \u5173\u8054 \uf0c1 hive\u4e2djoin\u7684\u65b9\u5f0f\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662fCommon Join(Reduce\u9636\u6bb5\u5b8c\u6210join)\u548cMap Join(Map\u9636\u6bb5\u5b8c\u6210join) Map\u9636\u6bb5 \u8bfb\u53d6\u5143\u6570\u636e , \u8f93\u51fakey\u548cvalues Shuffle\u9636\u6bb5 \u5c06key\u548cvalues\u6309\u7167\u4e0d\u540c\u7684hash\u503c\u63a8\u9001\u5230\u4e0d\u540c\u7684reduce\uff0c\u786e\u4fdd\u4e24\u4e2a\u8868\u4e2d\u76f8\u540c\u7684key\u4f4d\u4e8e\u540c\u4e00\u4e2areduce\u4e2d Reduce\u9636\u6bb5 \u6839\u636ekey\u7684\u503c\u5b8c\u6210join\u64cd\u4f5c\uff0c\u671f\u95f4\u901a\u8fc7Tag\u6765\u8bc6\u522b\u4e0d\u540c\u8868\u4e2d\u7684\u6570\u636e Map Join \uf0c1 \u603b\u7ed3: \u4f7f\u7528\u573a\u666f: (1) \u6709\u4e00\u4e2a\u6781\u5c0f\u7684\u8868<1000\u884c (2) \u9700\u8981\u505a\u4e0d\u7b49\u503cjoin\u64cd\u4f5c(a.x < b.y \u6216\u8005 a.x like b.y) select /*+MAPJOIN(a) */ a.start_level,b.* fromdim_level a join (select * fromtest) b where b.xx>=a.start_level and b.xx<end_level; hbase \uf0c1 \u57fa\u672c\u64cd\u4f5c \uf0c1 1 \u521b\u5efa\u547d\u540d\u7a7a\u95f4 create_namespace 'ai_ns' 2 \u5220\u9664\u7a7a\u95f4 drop_namespace 'ai_ns' 3 \u67e5\u770b\u7a7a\u95f4 list_namespace 4 \u63d2\u5165\u6570\u636e put 'quant:quant_meta','quant_v1','f1:table','quant_20170' \u53c2\u6570\u914d\u7f6e \uf0c1 1 \u5728 Spark \u4e0a\u914d\u7f6e Anaconda : export PATH=\"/opt/cloudera/parcels/Anaconda/bin:$PATH\" export PYSPARK_PYTHON=/opt/cloudera/parcels/Anaconda/bin/python 2 \u4ece\u4e24\u4e2a\u4e0d\u540c\u7684\u96c6\u7fa4\u590d\u5236\u6587\u4ef6 hadoop distcp hdfs:/cluster/user/a/b /user/a/b 3 \u5220\u9664\u5783\u573e\u56de\u6536\u7ad9\u4e2d\u6587\u4ef6 hadoop fs -rm -R -skipTrash /user/jiaoruiqiang/.Trash/Current/user/hive/warehouse/a.db Spark\u63d0\u4ea4\u4efb\u52a1\u7684\u4e00\u4e9b\u53c2\u6570 \uf0c1 --class \u5165\u53e3\u7c7b\u540d\uff0c\u5bf9\u4e8eJava\u548cScala\u7a0b\u5e8f\u6765\u8bf4\u662f\u5305\u542bmain()\u7684\u7c7b\u7684\u540d\u5b57\uff0cpython\u7a0b\u5e8f\u5219\u65e0\u987b\u6307\u5b9a\u8be5\u9009\u9879 --master \u96c6\u7fa4master\u7684\u5730\u5740 local \uff1a\u4ee5\u672c\u5730\u5355\u7ebf\u7a0b\u8fd0\u884cSpark local[N] \uff1a\u4ee5\u672c\u5730\u591a\u4e2a\u7ebf\u7a0b\u8fd0\u884cSpark local[*] \uff1a\u4ee5\u672c\u5730\u6a21\u5f0f\u8fd0\u884cSpark\uff0c\u7ebf\u7a0b\u6570\u7b49\u4e8e\u673a\u5668\u7684\u5185\u6838\u6570 spark://host:port \uff1a\u8fde\u63a5\u6307\u5b9a\u7684Standalone\u96c6\u7fa4\u8fd0\u884cspark yarn-client \uff1a\u4ee5client\u6a21\u5f0f\u8fde\u63a5\u5230YARN\u96c6\u7fa4\uff0c\u96c6\u7fa4\u4f4d\u7f6e\u5c06\u901a\u8fc7HADOOP_CONF_DIR\u73af\u5883\u53d8\u91cf\u83b7\u5f97 yarn-cluster \uff1a\u4ee5cluster\u6a21\u5f0f\u8fde\u63a5\u5230YARN\u96c6\u7fa4\uff0c\u96c6\u7fa4\u4f4d\u7f6e\u5c06\u901a\u8fc7HADOOP_CONF_DIR\u73af\u5883\u53d8\u91cf\u83b7\u5f97 mesos://host:port \uff1a \u8fde\u63a5\u6307\u5b9a\u7684Standalone\u96c6\u7fa4\u8fd0\u884cspark --deploy-mode \u7a0b\u5e8f\u90e8\u7f72\u6a21\u5f0f \u5c06driver\u90e8\u7f72\u5230worker\u8282\u70b9(cluster\u6a21\u5f0f)\u6216\u8005\u4f5c\u4e3a\u5916\u90e8\u5ba2\u6237\u7aef\u90e8\u7f72\u5230\u672c\u5730(client\u6a21\u5f0f)\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662fclient\u6a21\u5f0f client\uff1a\u6267\u884cSpark-submit\u547d\u4ee4\u7684\u673a\u5668\u4e0a\u542f\u52a8Drive\u7a0b\u5e8f cluster\uff1a\u4f1a\u5728\u5176\u4e2d\u4e00\u53f0\u5de5\u4f5c\u8282\u70b9\u4e0a\u8fd0\u884cdrive\u7a0b\u5e8f --jars \u7b2c\u4e09\u65b9\u53d1\u5e03\u7684Jar\u5305\uff0c\u591a\u4e2ajar\u5305\u9700\u8981\u7528\u82f1\u6587\u7684\u9017\u53f7\u9694\u5f00 --num-executors\uff1aexecutor\u8fdb\u7a0b\u6570 --executor-cores\uff1a executor\u8fdb\u7a0b\u5206\u914d\u5230\u7684\u6838\u6570,\u5355\u4e2aexecutor\u80fd\u5e76\u53d1\u6267\u884ctask\u6570 --executor-memory\uff1aexecutor\u8fdb\u7a0b\u5206\u914d\u5230\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u6839\u636ejob\u9700\u6c42\u4ee5\u53ca\u5e76\u53d1\u6570\u8bbe\u7f6e --py-files\uff1a\u7528\u4e8e\u4e0a\u4f20.py,.zip\u548c.egg\u7684\u6587\u4ef6 --driver-memory\uff1a\u6307\u5b9adrive\u8fdb\u7a0b\u8fdb\u884c\u5206\u914d\u5185\u5b58\u5927\u5c0f --conf spark.storage.memoryFraction\uff1a\u8bbe\u7f6e\u5185\u5b58\u7528\u6765\u4f5c\u4e3acache\u7684\u6bd4\u4f8b(=0.1) --conf spark.hadoop.fs.hdfs.impl.disable.cache\uff1a\u7981\u6b62\u4f7f\u7528\u5185\u5b58cache(=true) --conf spark.default.parallelism: \u63a7\u5236Spark\u4e2d\u7684\u5206\u5e03\u5f0fshuffle\u8fc7\u7a0b\u9ed8\u8ba4\u4f7f\u7528\u7684task\u6570\u91cf\uff0c\u9ed8\u8ba4Others: total number of cores on all executor nodes or 2, whichever is larger\uff0c\u6bcf\u4e00\u4e2aCPU\u6838(core)\u5206\u914d2-3\u4e2a\u4efb\u52a1(=400) --conf spark.yarn.executor.memoryOverhead: JVM\u8fdb\u7a0b\u4e2d\u9664Java\u5806\u4ee5\u5916\u5360\u7528\u7684\u7a7a\u95f4\u5927\u5c0f\uff0c\u5305\u62ec\u65b9\u6cd5\u533a(\u6c38\u4e45\u4ee3)\u3001Java\u865a\u62df\u673a\u6808\u3001\u672c\u5730\u65b9\u6cd5\u6808\u3001JVM\u8fdb\u7a0b\u672c\u8eab\u6240\u7528\u7684\u5185\u5b58\u3001\u76f4\u63a5\u5185\u5b58(Direct Memory)\u7b49(=5000) --conf spark.kryoserializer.buffer: \u5728\u6bcf\u4e00\u4e2awork\u7684\u6bcf\u4e00\u4e2acore\u4e0a\u90fd\u6709\u4e00\u4e2a\u521d\u59cb\u5316\u7684buffer, \u8fd9\u4e9bbuffer\u7684\u6700\u5927\u7684\u53ef\u8fbe\u5230conf spark.kryoserializer.buffer.max\u53c2\u6570\u8bbe\u7f6e\u7684\u53c2\u6570 --conf spark.kryoserializer.buffer.max \u7528\u6765\u8bbe\u7f6e\u5bf9\u8c61\u5e8f\u5217\u5316\u5360\u7528\u7a7a\u95f4\u5927\u5c0f(=2000m) --conf spark.driver.maxResultSize:\u8868\u6240\u6709\u5206\u533a\u7684\u5e8f\u5217\u5316\u8fd0\u884c\u603b\u7684\u5185\u5b58\u9650\u5236 ,\u63a7\u5236worker\u9001\u56dedriver\u7684\u6570\u636e\u5927\u5c0f\uff0c\u4e00\u65e6\u64cd\u8fc7\u8be5\u9650\u5236\uff0cdriver\u4f1a\u7ec8\u6b62\u6267\u884c(=10g)","title":"spark"},{"location":"program/spark/#spark","text":"","title":"Spark"},{"location":"program/spark/#hive","text":"","title":"Hive"},{"location":"program/spark/#_1","text":"hive\u4e2djoin\u7684\u65b9\u5f0f\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u662fCommon Join(Reduce\u9636\u6bb5\u5b8c\u6210join)\u548cMap Join(Map\u9636\u6bb5\u5b8c\u6210join) Map\u9636\u6bb5 \u8bfb\u53d6\u5143\u6570\u636e , \u8f93\u51fakey\u548cvalues Shuffle\u9636\u6bb5 \u5c06key\u548cvalues\u6309\u7167\u4e0d\u540c\u7684hash\u503c\u63a8\u9001\u5230\u4e0d\u540c\u7684reduce\uff0c\u786e\u4fdd\u4e24\u4e2a\u8868\u4e2d\u76f8\u540c\u7684key\u4f4d\u4e8e\u540c\u4e00\u4e2areduce\u4e2d Reduce\u9636\u6bb5 \u6839\u636ekey\u7684\u503c\u5b8c\u6210join\u64cd\u4f5c\uff0c\u671f\u95f4\u901a\u8fc7Tag\u6765\u8bc6\u522b\u4e0d\u540c\u8868\u4e2d\u7684\u6570\u636e","title":"\u5173\u8054"},{"location":"program/spark/#map-join","text":"\u603b\u7ed3: \u4f7f\u7528\u573a\u666f: (1) \u6709\u4e00\u4e2a\u6781\u5c0f\u7684\u8868<1000\u884c (2) \u9700\u8981\u505a\u4e0d\u7b49\u503cjoin\u64cd\u4f5c(a.x < b.y \u6216\u8005 a.x like b.y) select /*+MAPJOIN(a) */ a.start_level,b.* fromdim_level a join (select * fromtest) b where b.xx>=a.start_level and b.xx<end_level;","title":"Map Join"},{"location":"program/spark/#hbase","text":"","title":"hbase"},{"location":"program/spark/#_2","text":"1 \u521b\u5efa\u547d\u540d\u7a7a\u95f4 create_namespace 'ai_ns' 2 \u5220\u9664\u7a7a\u95f4 drop_namespace 'ai_ns' 3 \u67e5\u770b\u7a7a\u95f4 list_namespace 4 \u63d2\u5165\u6570\u636e put 'quant:quant_meta','quant_v1','f1:table','quant_20170'","title":"\u57fa\u672c\u64cd\u4f5c"},{"location":"program/spark/#_3","text":"1 \u5728 Spark \u4e0a\u914d\u7f6e Anaconda : export PATH=\"/opt/cloudera/parcels/Anaconda/bin:$PATH\" export PYSPARK_PYTHON=/opt/cloudera/parcels/Anaconda/bin/python 2 \u4ece\u4e24\u4e2a\u4e0d\u540c\u7684\u96c6\u7fa4\u590d\u5236\u6587\u4ef6 hadoop distcp hdfs:/cluster/user/a/b /user/a/b 3 \u5220\u9664\u5783\u573e\u56de\u6536\u7ad9\u4e2d\u6587\u4ef6 hadoop fs -rm -R -skipTrash /user/jiaoruiqiang/.Trash/Current/user/hive/warehouse/a.db","title":"\u53c2\u6570\u914d\u7f6e"},{"location":"program/spark/#spark_1","text":"--class \u5165\u53e3\u7c7b\u540d\uff0c\u5bf9\u4e8eJava\u548cScala\u7a0b\u5e8f\u6765\u8bf4\u662f\u5305\u542bmain()\u7684\u7c7b\u7684\u540d\u5b57\uff0cpython\u7a0b\u5e8f\u5219\u65e0\u987b\u6307\u5b9a\u8be5\u9009\u9879 --master \u96c6\u7fa4master\u7684\u5730\u5740 local \uff1a\u4ee5\u672c\u5730\u5355\u7ebf\u7a0b\u8fd0\u884cSpark local[N] \uff1a\u4ee5\u672c\u5730\u591a\u4e2a\u7ebf\u7a0b\u8fd0\u884cSpark local[*] \uff1a\u4ee5\u672c\u5730\u6a21\u5f0f\u8fd0\u884cSpark\uff0c\u7ebf\u7a0b\u6570\u7b49\u4e8e\u673a\u5668\u7684\u5185\u6838\u6570 spark://host:port \uff1a\u8fde\u63a5\u6307\u5b9a\u7684Standalone\u96c6\u7fa4\u8fd0\u884cspark yarn-client \uff1a\u4ee5client\u6a21\u5f0f\u8fde\u63a5\u5230YARN\u96c6\u7fa4\uff0c\u96c6\u7fa4\u4f4d\u7f6e\u5c06\u901a\u8fc7HADOOP_CONF_DIR\u73af\u5883\u53d8\u91cf\u83b7\u5f97 yarn-cluster \uff1a\u4ee5cluster\u6a21\u5f0f\u8fde\u63a5\u5230YARN\u96c6\u7fa4\uff0c\u96c6\u7fa4\u4f4d\u7f6e\u5c06\u901a\u8fc7HADOOP_CONF_DIR\u73af\u5883\u53d8\u91cf\u83b7\u5f97 mesos://host:port \uff1a \u8fde\u63a5\u6307\u5b9a\u7684Standalone\u96c6\u7fa4\u8fd0\u884cspark --deploy-mode \u7a0b\u5e8f\u90e8\u7f72\u6a21\u5f0f \u5c06driver\u90e8\u7f72\u5230worker\u8282\u70b9(cluster\u6a21\u5f0f)\u6216\u8005\u4f5c\u4e3a\u5916\u90e8\u5ba2\u6237\u7aef\u90e8\u7f72\u5230\u672c\u5730(client\u6a21\u5f0f)\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u662fclient\u6a21\u5f0f client\uff1a\u6267\u884cSpark-submit\u547d\u4ee4\u7684\u673a\u5668\u4e0a\u542f\u52a8Drive\u7a0b\u5e8f cluster\uff1a\u4f1a\u5728\u5176\u4e2d\u4e00\u53f0\u5de5\u4f5c\u8282\u70b9\u4e0a\u8fd0\u884cdrive\u7a0b\u5e8f --jars \u7b2c\u4e09\u65b9\u53d1\u5e03\u7684Jar\u5305\uff0c\u591a\u4e2ajar\u5305\u9700\u8981\u7528\u82f1\u6587\u7684\u9017\u53f7\u9694\u5f00 --num-executors\uff1aexecutor\u8fdb\u7a0b\u6570 --executor-cores\uff1a executor\u8fdb\u7a0b\u5206\u914d\u5230\u7684\u6838\u6570,\u5355\u4e2aexecutor\u80fd\u5e76\u53d1\u6267\u884ctask\u6570 --executor-memory\uff1aexecutor\u8fdb\u7a0b\u5206\u914d\u5230\u7684\u5185\u5b58\u5927\u5c0f\uff0c\u6839\u636ejob\u9700\u6c42\u4ee5\u53ca\u5e76\u53d1\u6570\u8bbe\u7f6e --py-files\uff1a\u7528\u4e8e\u4e0a\u4f20.py,.zip\u548c.egg\u7684\u6587\u4ef6 --driver-memory\uff1a\u6307\u5b9adrive\u8fdb\u7a0b\u8fdb\u884c\u5206\u914d\u5185\u5b58\u5927\u5c0f --conf spark.storage.memoryFraction\uff1a\u8bbe\u7f6e\u5185\u5b58\u7528\u6765\u4f5c\u4e3acache\u7684\u6bd4\u4f8b(=0.1) --conf spark.hadoop.fs.hdfs.impl.disable.cache\uff1a\u7981\u6b62\u4f7f\u7528\u5185\u5b58cache(=true) --conf spark.default.parallelism: \u63a7\u5236Spark\u4e2d\u7684\u5206\u5e03\u5f0fshuffle\u8fc7\u7a0b\u9ed8\u8ba4\u4f7f\u7528\u7684task\u6570\u91cf\uff0c\u9ed8\u8ba4Others: total number of cores on all executor nodes or 2, whichever is larger\uff0c\u6bcf\u4e00\u4e2aCPU\u6838(core)\u5206\u914d2-3\u4e2a\u4efb\u52a1(=400) --conf spark.yarn.executor.memoryOverhead: JVM\u8fdb\u7a0b\u4e2d\u9664Java\u5806\u4ee5\u5916\u5360\u7528\u7684\u7a7a\u95f4\u5927\u5c0f\uff0c\u5305\u62ec\u65b9\u6cd5\u533a(\u6c38\u4e45\u4ee3)\u3001Java\u865a\u62df\u673a\u6808\u3001\u672c\u5730\u65b9\u6cd5\u6808\u3001JVM\u8fdb\u7a0b\u672c\u8eab\u6240\u7528\u7684\u5185\u5b58\u3001\u76f4\u63a5\u5185\u5b58(Direct Memory)\u7b49(=5000) --conf spark.kryoserializer.buffer: \u5728\u6bcf\u4e00\u4e2awork\u7684\u6bcf\u4e00\u4e2acore\u4e0a\u90fd\u6709\u4e00\u4e2a\u521d\u59cb\u5316\u7684buffer, \u8fd9\u4e9bbuffer\u7684\u6700\u5927\u7684\u53ef\u8fbe\u5230conf spark.kryoserializer.buffer.max\u53c2\u6570\u8bbe\u7f6e\u7684\u53c2\u6570 --conf spark.kryoserializer.buffer.max \u7528\u6765\u8bbe\u7f6e\u5bf9\u8c61\u5e8f\u5217\u5316\u5360\u7528\u7a7a\u95f4\u5927\u5c0f(=2000m) --conf spark.driver.maxResultSize:\u8868\u6240\u6709\u5206\u533a\u7684\u5e8f\u5217\u5316\u8fd0\u884c\u603b\u7684\u5185\u5b58\u9650\u5236 ,\u63a7\u5236worker\u9001\u56dedriver\u7684\u6570\u636e\u5927\u5c0f\uff0c\u4e00\u65e6\u64cd\u8fc7\u8be5\u9650\u5236\uff0cdriver\u4f1a\u7ec8\u6b62\u6267\u884c(=10g)","title":"Spark\u63d0\u4ea4\u4efb\u52a1\u7684\u4e00\u4e9b\u53c2\u6570"}]}